{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\layouts\\\\components\\\\navbar\\\\NavbarBookmarks.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Link } from 'react-router-dom';\nimport { Fragment, useEffect, useState } from 'react'; // ** Third Party Components\n\nimport * as Icon from 'react-feather';\nimport classnames from 'classnames'; // ** Custom Component\n\nimport Autocomplete from '@components/autocomplete'; // ** Reactstrap Imports\n\nimport { NavItem, NavLink, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledTooltip, UncontrolledDropdown } from 'reactstrap'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavbarBookmarks = props => {\n  _s();\n\n  // ** Props\n  const {\n    setMenuVisibility\n  } = props; // ** State\n\n  const [value, setValue] = useState('');\n  const [openSearch, setOpenSearch] = useState(false); // ** Store Vars\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.navbar); // ** ComponentDidMount\n\n  useEffect(() => {\n    dispatch(getBookmarks());\n  }, []); // ** Loops through Bookmarks Array to return Bookmarks\n\n  const renderBookmarks = () => {\n    if (store.bookmarks.length) {\n      return store.bookmarks.map(item => {\n        const IconTag = Icon[item.icon];\n        return /*#__PURE__*/_jsxDEV(NavItem, {\n          className: \"d-none d-lg-block\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            tag: Link,\n            to: item.link,\n            id: item.target,\n            children: [/*#__PURE__*/_jsxDEV(IconTag, {\n              className: \"ficon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n              target: item.target,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, item.target, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }).slice(0, 10);\n    } else {\n      return null;\n    }\n  }; // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\n\n\n  const renderExtraBookmarksDropdown = () => {\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\n      return /*#__PURE__*/_jsxDEV(NavItem, {\n        className: \"d-none d-lg-block\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          tag: \"span\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              tag: \"span\",\n              children: /*#__PURE__*/_jsxDEV(Icon.ChevronDown, {\n                className: \"ficon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              end: true,\n              children: store.bookmarks.map(item => {\n                const IconTag = Icon[item.icon];\n                return /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  tag: Link,\n                  to: item.link,\n                  children: [/*#__PURE__*/_jsxDEV(IconTag, {\n                    className: \"me-50\",\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"align-middle\",\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this);\n              }).slice(10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }; // ** Removes query in store\n\n\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery('')); // ** Loops through Bookmarks Array to return Bookmarks\n\n\n  const onKeyDown = e => {\n    if (e.keyCode === 27 || e.keyCode === 13) {\n      setTimeout(() => {\n        setOpenSearch(false);\n        handleClearQueryInStore();\n      }, 1);\n    }\n  }; // ** Function to toggle Bookmarks\n\n\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id)); // ** Function to handle Bookmarks visibility\n\n\n  const handleBookmarkVisibility = () => {\n    setOpenSearch(!openSearch);\n    setValue('');\n    handleClearQueryInStore();\n  }; // ** Function to handle Input change\n\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n    dispatch(handleSearchQuery(e.target.value));\n  }; // ** Function to handle external Input click\n\n\n  const handleExternalClick = () => {\n    if (openSearch === true) {\n      setOpenSearch(false);\n      handleClearQueryInStore();\n    }\n  }; // ** Function to clear input value\n\n\n  const handleClearInput = setUserInput => {\n    if (!openSearch) {\n      setUserInput('');\n      handleClearQueryInStore();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-nav d-xl-none\",\n      children: /*#__PURE__*/_jsxDEV(NavItem, {\n        className: \"mobile-menu me-auto\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"nav-menu-main menu-toggle hidden-xs is-active\",\n          onClick: () => setMenuVisibility(true),\n          children: /*#__PURE__*/_jsxDEV(Icon.Menu, {\n            className: \"ficon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav navbar-nav bookmark-icons\",\n      children: [renderBookmarks(), renderExtraBookmarksDropdown(), /*#__PURE__*/_jsxDEV(NavItem, {\n        className: \"nav-item d-none d-lg-block\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"bookmark-star\",\n          onClick: handleBookmarkVisibility,\n          children: /*#__PURE__*/_jsxDEV(Icon.Star, {\n            className: \"ficon text-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('bookmark-input search-input', {\n            show: openSearch\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bookmark-input-icon\",\n            children: /*#__PURE__*/_jsxDEV(Icon.Search, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), openSearch && store.suggestions.length ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n            wrapperClass: classnames('search-list search-list-bookmark', {\n              show: openSearch\n            }),\n            className: \"form-control\",\n            suggestions: !value.length ? store.bookmarks : store.suggestions,\n            filterKey: \"title\",\n            autoFocus: true,\n            defaultSuggestions: true,\n            suggestionLimit: !value.length ? store.bookmarks.length : 6,\n            placeholder: \"Search...\",\n            externalClick: handleExternalClick,\n            clearInput: (userInput, setUserInput) => handleClearInput(setUserInput),\n            onKeyDown: onKeyDown,\n            value: value,\n            onChange: handleInputChange,\n            customRender: (item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => {\n              const IconTag = Icon[item.icon ? item.icon : 'X'];\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                onMouseEnter: () => onSuggestionItemHover(filteredData.indexOf(item)),\n                className: classnames('suggestion-item d-flex align-items-center justify-content-between', {\n                  active: filteredData.indexOf(item) === activeSuggestion\n                }),\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: item.link,\n                  className: \"d-flex align-items-center justify-content-between p-0\",\n                  onClick: () => {\n                    setOpenSearch(false);\n                    handleClearQueryInStore();\n                  },\n                  style: {\n                    width: 'calc(90%)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex justify-content-start align-items-center overflow-hidden\",\n                    children: [/*#__PURE__*/_jsxDEV(IconTag, {\n                      size: 17.5,\n                      className: \"me-75\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-truncate\",\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Icon.Star, {\n                  size: 17.5,\n                  className: classnames('bookmark-icon float-end', {\n                    'text-warning': item.isBookmarked\n                  }),\n                  onClick: () => handleBookmarkUpdate(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavbarBookmarks, \"7pP+iUH1mz07/7tgLgLMY2BQPp4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NavbarBookmarks;\nexport default NavbarBookmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarBookmarks\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/layouts/components/navbar/NavbarBookmarks.js"],"names":["Link","Fragment","useEffect","useState","Icon","classnames","Autocomplete","NavItem","NavLink","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledTooltip","UncontrolledDropdown","useDispatch","useSelector","getBookmarks","updateBookmarked","handleSearchQuery","NavbarBookmarks","props","setMenuVisibility","value","setValue","openSearch","setOpenSearch","dispatch","store","state","navbar","renderBookmarks","bookmarks","length","map","item","IconTag","icon","link","target","title","slice","renderExtraBookmarksDropdown","id","handleClearQueryInStore","onKeyDown","e","keyCode","setTimeout","handleBookmarkUpdate","handleBookmarkVisibility","handleInputChange","handleExternalClick","handleClearInput","setUserInput","show","suggestions","userInput","i","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","indexOf","active","width","isBookmarked"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Component\r\nimport Autocomplete from '@components/autocomplete'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/navbar'\r\n\r\nconst NavbarBookmarks = props => {\r\n  // ** Props\r\n  const { setMenuVisibility } = props\r\n\r\n  // ** State\r\n  const [value, setValue] = useState('')\r\n  const [openSearch, setOpenSearch] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.navbar)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getBookmarks())\r\n  }, [])\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const renderBookmarks = () => {\r\n    if (store.bookmarks.length) {\r\n      return store.bookmarks\r\n        .map(item => {\r\n          const IconTag = Icon[item.icon]\r\n          return (\r\n            <NavItem key={item.target} className='d-none d-lg-block'>\r\n              <NavLink tag={Link} to={item.link} id={item.target}>\r\n                <IconTag className='ficon' />\r\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\r\n              </NavLink>\r\n            </NavItem>\r\n          )\r\n        })\r\n        .slice(0, 10)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\r\n  const renderExtraBookmarksDropdown = () => {\r\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\r\n      return (\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink tag='span'>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle tag='span'>\r\n                <Icon.ChevronDown className='ficon' />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                {store.bookmarks\r\n                  .map(item => {\r\n                    const IconTag = Icon[item.icon]\r\n                    return (\r\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\r\n                        <IconTag className='me-50' size={14} />\r\n                        <span className='align-middle'>{item.title}</span>\r\n                      </DropdownItem>\r\n                    )\r\n                  })\r\n                  .slice(10)}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setOpenSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to toggle Bookmarks\r\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\r\n\r\n  // ** Function to handle Bookmarks visibility\r\n  const handleBookmarkVisibility = () => {\r\n    setOpenSearch(!openSearch)\r\n    setValue('')\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle Input change\r\n  const handleInputChange = e => {\r\n    setValue(e.target.value)\r\n    dispatch(handleSearchQuery(e.target.value))\r\n  }\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (openSearch === true) {\r\n      setOpenSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!openSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu me-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      <ul className='nav navbar-nav bookmark-icons'>\r\n        {renderBookmarks()}\r\n        {renderExtraBookmarksDropdown()}\r\n        <NavItem className='nav-item d-none d-lg-block'>\r\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\r\n            <Icon.Star className='ficon text-warning' />\r\n          </NavLink>\r\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\r\n            <div className='bookmark-input-icon'>\r\n              <Icon.Search size={14} />\r\n            </div>\r\n            {openSearch && store.suggestions.length ? (\r\n              <Autocomplete\r\n                wrapperClass={classnames('search-list search-list-bookmark', {\r\n                  show: openSearch\r\n                })}\r\n                className='form-control'\r\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\r\n                filterKey='title'\r\n                autoFocus={true}\r\n                defaultSuggestions\r\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\r\n                placeholder='Search...'\r\n                externalClick={handleExternalClick}\r\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n                onKeyDown={onKeyDown}\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                customRender={(\r\n                  item,\r\n                  i,\r\n                  filteredData,\r\n                  activeSuggestion,\r\n                  onSuggestionItemClick,\r\n                  onSuggestionItemHover\r\n                ) => {\r\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\r\n                        active: filteredData.indexOf(item) === activeSuggestion\r\n                      })}\r\n                    >\r\n                      <Link\r\n                        to={item.link}\r\n                        className='d-flex align-items-center justify-content-between p-0'\r\n                        onClick={() => {\r\n                          setOpenSearch(false)\r\n                          handleClearQueryInStore()\r\n                        }}\r\n                        style={{\r\n                          width: 'calc(90%)'\r\n                        }}\r\n                      >\r\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\r\n                          <IconTag size={17.5} className='me-75' />\r\n                          <span className='text-truncate'>{item.title}</span>\r\n                        </div>\r\n                      </Link>\r\n                      <Icon.Star\r\n                        size={17.5}\r\n                        className={classnames('bookmark-icon float-end', {\r\n                          'text-warning': item.isBookmarked\r\n                        })}\r\n                        onClick={() => handleBookmarkUpdate(item.id)}\r\n                      />\r\n                    </li>\r\n                  )\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </NavItem>\r\n      </ul>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavbarBookmarks\r\n"]},"metadata":{},"sourceType":"module"}