{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { L as handleInputChange, a as _objectSpread2 } from './index-c7a4d7ce.esm.js';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nvar _excluded = [\"defaultOptions\", \"cacheOptions\", \"loadOptions\", \"options\", \"isLoading\", \"onInputChange\", \"filterOption\"];\n\nfunction useAsync(_ref) {\n  var _ref$defaultOptions = _ref.defaultOptions,\n      propsDefaultOptions = _ref$defaultOptions === void 0 ? false : _ref$defaultOptions,\n      _ref$cacheOptions = _ref.cacheOptions,\n      cacheOptions = _ref$cacheOptions === void 0 ? false : _ref$cacheOptions,\n      propsLoadOptions = _ref.loadOptions;\n  _ref.options;\n\n  var _ref$isLoading = _ref.isLoading,\n      propsIsLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      propsOnInputChange = _ref.onInputChange,\n      _ref$filterOption = _ref.filterOption,\n      filterOption = _ref$filterOption === void 0 ? null : _ref$filterOption,\n      restSelectProps = _objectWithoutProperties(_ref, _excluded);\n\n  var propsInputValue = restSelectProps.inputValue;\n  var lastRequest = useRef(undefined);\n  var mounted = useRef(false);\n\n  var _useState = useState(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultOptions = _useState2[0],\n      setDefaultOptions = _useState2[1];\n\n  var _useState3 = useState(typeof propsInputValue !== 'undefined' ? propsInputValue : ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateInputValue = _useState4[0],\n      setStateInputValue = _useState4[1];\n\n  var _useState5 = useState(propsDefaultOptions === true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadedInputValue = _useState8[0],\n      setLoadedInputValue = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loadedOptions = _useState10[0],\n      setLoadedOptions = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passEmptyOptions = _useState12[0],\n      setPassEmptyOptions = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      optionsCache = _useState14[0],\n      setOptionsCache = _useState14[1];\n\n  var _useState15 = useState(undefined),\n      _useState16 = _slicedToArray(_useState15, 2),\n      prevDefaultOptions = _useState16[0],\n      setPrevDefaultOptions = _useState16[1];\n\n  var _useState17 = useState(undefined),\n      _useState18 = _slicedToArray(_useState17, 2),\n      prevCacheOptions = _useState18[0],\n      setPrevCacheOptions = _useState18[1];\n\n  if (cacheOptions !== prevCacheOptions) {\n    setOptionsCache({});\n    setPrevCacheOptions(cacheOptions);\n  }\n\n  if (propsDefaultOptions !== prevDefaultOptions) {\n    setDefaultOptions(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined);\n    setPrevDefaultOptions(propsDefaultOptions);\n  }\n\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  var loadOptions = useCallback(function (inputValue, callback) {\n    if (!propsLoadOptions) return callback();\n    var loader = propsLoadOptions(inputValue, callback);\n\n    if (loader && typeof loader.then === 'function') {\n      loader.then(callback, function () {\n        return callback();\n      });\n    }\n  }, [propsLoadOptions]);\n  useEffect(function () {\n    if (propsDefaultOptions === true) {\n      loadOptions(stateInputValue, function (options) {\n        if (!mounted.current) return;\n        setDefaultOptions(options || []);\n        setIsLoading(!!lastRequest.current);\n      });\n    } // NOTE: this effect is designed to only run when the component mounts,\n    // so we don't want to include any hook dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  var onInputChange = useCallback(function (newValue, actionMeta) {\n    var inputValue = handleInputChange(newValue, actionMeta, propsOnInputChange);\n\n    if (!inputValue) {\n      lastRequest.current = undefined;\n      setStateInputValue('');\n      setLoadedInputValue('');\n      setLoadedOptions([]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n      return;\n    }\n\n    if (cacheOptions && optionsCache[inputValue]) {\n      setStateInputValue(inputValue);\n      setLoadedInputValue(inputValue);\n      setLoadedOptions(optionsCache[inputValue]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n    } else {\n      var request = lastRequest.current = {};\n      setStateInputValue(inputValue);\n      setIsLoading(true);\n      setPassEmptyOptions(!loadedInputValue);\n      loadOptions(inputValue, function (options) {\n        if (!mounted) return;\n        if (request !== lastRequest.current) return;\n        lastRequest.current = undefined;\n        setIsLoading(false);\n        setLoadedInputValue(inputValue);\n        setLoadedOptions(options || []);\n        setPassEmptyOptions(false);\n        setOptionsCache(options ? _objectSpread2(_objectSpread2({}, optionsCache), {}, _defineProperty({}, inputValue, options)) : optionsCache);\n      });\n    }\n  }, [cacheOptions, loadOptions, loadedInputValue, optionsCache, propsOnInputChange]);\n  var options = passEmptyOptions ? [] : stateInputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n  return _objectSpread2(_objectSpread2({}, restSelectProps), {}, {\n    options: options,\n    isLoading: isLoading || propsIsLoading,\n    onInputChange: onInputChange,\n    filterOption: filterOption\n  });\n}\n\nexport { useAsync as u };","map":null,"metadata":{},"sourceType":"module"}