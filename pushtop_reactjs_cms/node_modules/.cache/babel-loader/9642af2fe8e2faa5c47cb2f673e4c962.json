{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\views\\\\components\\\\alerts\\\\AlertExample.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState } from 'react'; // ** Icons Imports\n\nimport { AlertCircle } from 'react-feather'; // ** Reactstrap Imports\n\nimport { Alert, Label, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertExample = () => {\n  _s();\n\n  // ** States\n  const [visible, setVisible] = useState(true);\n  const [inputTerm, setInputTerm] = useState('');\n\n  const handleInput = e => {\n    setInputTerm(e.target.value);\n\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-spacing-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: \"form-label\",\n        htmlFor: \"numbers\",\n        children: \"Enter numbers only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"w-25 h-25 ps-1\",\n        placeholder: \"0123456789\",\n        value: inputTerm,\n        onChange: e => handleInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"danger\",\n      isOpen: visible,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-body\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-1\",\n          children: [\"The value is \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 26\n          }, this), \" you can only enter numbers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertExample, \"BvolIKkchyhPbGTn9MD3BC5LlF8=\");\n\n_c = AlertExample;\nexport default AlertExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertExample\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/views/components/alerts/AlertExample.js"],"names":["useState","AlertCircle","Alert","Label","Input","AlertExample","visible","setVisible","inputTerm","setInputTerm","handleInput","e","target","value","length","isNaN"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,YAApC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMU,WAAW,GAAGC,CAAC,IAAI;AACvBF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;;AAEA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAAxB,IAA6BC,KAAK,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC,EAAwD;AACtDN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,WAAW,EAAC,YAA9C;AAA2D,QAAA,KAAK,EAAEC,SAAlE;AAA6E,QAAA,QAAQ,EAAEG,CAAC,IAAID,WAAW,CAACC,CAAD;AAAvG;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,QAAb;AAAsB,MAAA,MAAM,EAAEL,OAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,EAC4B,GAD5B,eAEE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,mDACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjCD;;GAAMD,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Icons Imports\r\nimport { AlertCircle } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert, Label, Input } from 'reactstrap'\r\n\r\nconst AlertExample = () => {\r\n  // ** States\r\n  const [visible, setVisible] = useState(true)\r\n  const [inputTerm, setInputTerm] = useState('')\r\n\r\n  const handleInput = e => {\r\n    setInputTerm(e.target.value)\r\n\r\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\r\n      setVisible(true)\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <div className='mb-2'>\r\n        <Label className='form-label' htmlFor='numbers'>\r\n          Enter numbers only\r\n        </Label>\r\n        <Input className='w-25 h-25 ps-1' placeholder='0123456789' value={inputTerm} onChange={e => handleInput(e)} />\r\n      </div>\r\n      <Alert color='danger' isOpen={visible}>\r\n        <div className='alert-body'>\r\n          <AlertCircle size={15} />{' '}\r\n          <span className='ms-1'>\r\n            The value is <strong>invalid</strong> you can only enter numbers\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertExample\r\n"]},"metadata":{},"sourceType":"module"}