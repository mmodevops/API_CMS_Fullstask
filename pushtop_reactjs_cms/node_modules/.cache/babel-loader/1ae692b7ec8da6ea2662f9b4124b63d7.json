{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\views\\\\ui-elements\\\\cards\\\\statistics\\\\ProfitLineChart.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect, useState } from 'react'; // ** Third Party Components\n\nimport axios from 'axios'; // ** Custom Components\n\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfitLineChart = _ref => {\n  _s();\n\n  let {\n    info\n  } = _ref;\n  // ** State\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data));\n    return () => setData(null);\n  }, []);\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [{\n      data: [0, 20, 5, 30, 15, 45]\n    }],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [{\n        seriesIndex: 0,\n        dataPointIndex: 5,\n        fillColor: '#ffffff',\n        strokeColor: info,\n        size: 5\n      }],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(TinyChartStats, {\n    height: 70,\n    type: \"line\",\n    options: options,\n    title: data.title,\n    stats: data.statistics,\n    series: data.series\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(ProfitLineChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = ProfitLineChart;\nexport default ProfitLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfitLineChart\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/views/ui-elements/cards/statistics/ProfitLineChart.js"],"names":["useEffect","useState","axios","TinyChartStats","ProfitLineChart","info","data","setData","get","then","res","options","chart","toolbar","show","zoom","enabled","grid","borderColor","strokeDashArray","xaxis","lines","yaxis","padding","top","bottom","stroke","width","colors","series","markers","size","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","labels","style","fontSize","axisBorder","axisTicks","tooltip","x","title","statistics"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst ProfitLineChart = ({ info }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: '#EBEBEB',\r\n      strokeDashArray: 5,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      padding: {\r\n        top: -30,\r\n        bottom: -10\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 3\r\n    },\r\n    colors: [info],\r\n    series: [\r\n      {\r\n        data: [0, 20, 5, 30, 15, 45]\r\n      }\r\n    ],\r\n    markers: {\r\n      size: 2,\r\n      colors: info,\r\n      strokeColors: info,\r\n      strokeWidth: 2,\r\n      strokeOpacity: 1,\r\n      strokeDashArray: 0,\r\n      fillOpacity: 1,\r\n      discrete: [\r\n        {\r\n          seriesIndex: 0,\r\n          dataPointIndex: 5,\r\n          fillColor: '#ffffff',\r\n          strokeColor: info,\r\n          size: 5\r\n        }\r\n      ],\r\n      shape: 'circle',\r\n      radius: 2,\r\n      hover: {\r\n        size: 3\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '0px'\r\n        }\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='line'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ProfitLineChart\r\n"]},"metadata":{},"sourceType":"module"}