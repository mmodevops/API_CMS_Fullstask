{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\horizontal-menu\\\\HorizontalNavMenuLink.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HorizontalNavMenuLink = _ref => {\n  _s();\n\n  let {\n    item,\n    isChild,\n    activeItem,\n    setActiveItem,\n    setOpenDropdown,\n    currentActiveItem\n  } = _ref;\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink; // ** Hooks\n\n  const {\n    t\n  } = useTranslation(); // ** Remove all items from OpenDropdown array\n\n  const resetOpenDropdowns = () => setOpenDropdown([]); // ** On mount update active group array\n\n\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames('nav-item', {\n      active: item.navLink === activeItem,\n      disabled: item.disabled\n    }),\n    onClick: resetOpenDropdowns,\n    children: /*#__PURE__*/_jsxDEV(LinkTag, {\n      className: classnames('d-flex align-items-center', {\n        'dropdown-item': isChild,\n        'nav-link': !isChild\n      }),\n      tag: LinkTag,\n      target: item.newTab ? '_blank' : undefined\n      /*eslint-disable */\n      ,\n      ...(item.externalLink === true ? {\n        href: item.navLink || '/'\n      } : {\n        to: item.navLink || '/',\n        isActive: (match, location) => {\n          if (!match) {\n            return false;\n          }\n\n          if (match.url && match.url !== '' && match.url === item.navLink) {\n            currentActiveItem = item.navLink;\n          }\n        }\n      }),\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: t(item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HorizontalNavMenuLink, \"yIHkV3cUFHCxFeD16vLIxDL2JDQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = HorizontalNavMenuLink;\nexport default HorizontalNavMenuLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNavMenuLink\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js"],"names":["useEffect","NavLink","classnames","useTranslation","HorizontalNavMenuLink","item","isChild","activeItem","setActiveItem","setOpenDropdown","currentActiveItem","LinkTag","externalLink","t","resetOpenDropdowns","location","active","navLink","disabled","newTab","undefined","href","to","isActive","match","url","icon","title"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,qBAAqB,GAAG,QAAsF;AAAA;;AAAA,MAArF;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA,eAA5C;AAA6DC,IAAAA;AAA7D,GAAqF;AAClH;AACA,QAAMC,OAAO,GAAGN,IAAI,CAACO,YAAL,GAAoB,GAApB,GAA0BX,OAA1C,CAFkH,CAIlH;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAQV,cAAc,EAA5B,CALkH,CAOlH;;AACA,QAAMW,kBAAkB,GAAG,MAAML,eAAe,CAAC,EAAD,CAAhD,CARkH,CAUlH;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,iBAAiB,KAAK,IAA1B,EAAgC;AAC9BF,MAAAA,aAAa,CAACE,iBAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACK,QAAD,CAJM,CAAT;AAMA,sBACE;AACE,IAAA,SAAS,EAAEb,UAAU,CAAC,UAAD,EAAa;AAChCc,MAAAA,MAAM,EAAEX,IAAI,CAACY,OAAL,KAAiBV,UADO;AAEhCW,MAAAA,QAAQ,EAAEb,IAAI,CAACa;AAFiB,KAAb,CADvB;AAKE,IAAA,OAAO,EAAEJ,kBALX;AAAA,2BAOE,QAAC,OAAD;AACE,MAAA,SAAS,EAAEZ,UAAU,CAAC,2BAAD,EAA8B;AACjD,yBAAiBI,OADgC;AAEjD,oBAAY,CAACA;AAFoC,OAA9B,CADvB;AAKE,MAAA,GAAG,EAAEK,OALP;AAME,MAAA,MAAM,EAAEN,IAAI,CAACc,MAAL,GAAc,QAAd,GAAyBC;AACjC;AAPF;AAAA,UAQOf,IAAI,CAACO,YAAL,KAAsB,IAAtB,GACD;AACES,QAAAA,IAAI,EAAEhB,IAAI,CAACY,OAAL,IAAgB;AADxB,OADC,GAID;AACEK,QAAAA,EAAE,EAAEjB,IAAI,CAACY,OAAL,IAAgB,GADtB;AAEEM,QAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQT,QAAR,KAAqB;AAC7B,cAAI,CAACS,KAAL,EAAY;AACV,mBAAO,KAAP;AACD;;AAED,cAAIA,KAAK,CAACC,GAAN,IAAaD,KAAK,CAACC,GAAN,KAAc,EAA3B,IAAiCD,KAAK,CAACC,GAAN,KAAcpB,IAAI,CAACY,OAAxD,EAAiE;AAC/DP,YAAAA,iBAAiB,GAAGL,IAAI,CAACY,OAAzB;AACD;AACF;AAVH,OAZN;AAAA,iBA0BGZ,IAAI,CAACqB,IA1BR,eA2BE;AAAA,kBAAOb,CAAC,CAACR,IAAI,CAACsB,KAAN;AAAR;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAxDD;;GAAMvB,qB;UAKUD,c;;;KALVC,qB;AA0DN,eAAeA,qBAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalNavMenuLink = ({ item, isChild, activeItem, setActiveItem, setOpenDropdown, currentActiveItem }) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>{t(item.title)}</span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n"]},"metadata":{},"sourceType":"module"}