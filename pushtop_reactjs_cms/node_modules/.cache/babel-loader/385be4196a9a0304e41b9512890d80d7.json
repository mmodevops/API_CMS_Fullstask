{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\VerticalNavMenuGroup.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next'; // ** Reactstrap Imports\n\nimport { Collapse, Badge } from 'reactstrap'; // ** Vertical Menu Items Component\n\nimport VerticalNavMenuItems from './VerticalNavMenuItems'; // ** Utils\n\nimport { hasActiveChild, removeChildren } from '@layouts/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerticalNavMenuGroup = _ref => {\n  _s();\n\n  let {\n    item,\n    groupOpen,\n    menuHover,\n    activeItem,\n    parentItem,\n    routerProps,\n    groupActive,\n    currentActiveGroup,\n    setGroupOpen,\n    setActiveItem,\n    menuCollapsed,\n    setGroupActive,\n    setCurrentActiveGroup,\n    currentActiveItem,\n    ...rest\n  } = _ref;\n  // ** Hooks\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation(); // ** Current Val\n\n  const currentURL = useLocation().pathname; // ** Toggle Open Group\n\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen;\n    const activeGroup = groupActive; // ** If Group is already open and clicked, close the group\n\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1); // ** If clicked Group has open group children, Also remove those children to close those groups\n\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive);\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id);\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1);\n      } // ** Update Active Group\n\n\n      setGroupActive([...activeGroup]);\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive);\n      } // ** After removing all the open groups under that parent, add the clicked group to open group array\n\n\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id);\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n      // ** Empty Open Group array\n      openGroup = []; // ** Push current clicked group item to Open Group array\n\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id);\n      }\n    }\n\n    setGroupOpen([...openGroup]);\n  }; // ** On Group Item Click\n\n\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem);\n    e.preventDefault();\n  }; // ** Checks url & updates active item\n\n\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id);\n    } else {\n      const index = groupActive.indexOf(item.id);\n      if (index > -1) groupActive.splice(index, 1);\n    }\n\n    setGroupActive([...groupActive]);\n    setCurrentActiveGroup([...groupActive]);\n    setGroupOpen([]);\n  }, [location]); // ** Returns condition to add open class\n\n  const openClassCondition = id => {\n    if (menuCollapsed && menuHover || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true;\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false;\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames('nav-item has-sub', {\n      open: openClassCondition(item.id),\n      'menu-collapsed-open': groupActive.includes(item.id),\n      'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"d-flex align-items-center\",\n      to: \"/\",\n      onClick: e => onCollapseClick(e, item),\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"menu-title text-truncate\",\n        children: t(item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), item.badge && item.badgeText ? /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"ms-auto me-1\",\n        color: item.badge,\n        pill: true,\n        children: item.badgeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"menu-content\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: groupActive && groupActive.includes(item.id) || groupOpen && groupOpen.includes(item.id),\n        children: /*#__PURE__*/_jsxDEV(VerticalNavMenuItems, { ...rest,\n          items: item.children,\n          groupActive: groupActive,\n          setGroupActive: setGroupActive,\n          currentActiveGroup: currentActiveGroup,\n          setCurrentActiveGroup: setCurrentActiveGroup,\n          groupOpen: groupOpen,\n          setGroupOpen: setGroupOpen,\n          parentItem: item,\n          menuCollapsed: menuCollapsed,\n          menuHover: menuHover,\n          routerProps: routerProps,\n          currentActiveItem: currentActiveItem,\n          activeItem: activeItem,\n          setActiveItem: setActiveItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerticalNavMenuGroup, \"5evRWzZM58ocCZYipES80tW+uLk=\", false, function () {\n  return [useTranslation, useLocation, useLocation];\n});\n\n_c = VerticalNavMenuGroup;\nexport default VerticalNavMenuGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalNavMenuGroup\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js"],"names":["useEffect","Link","useLocation","classnames","useTranslation","Collapse","Badge","VerticalNavMenuItems","hasActiveChild","removeChildren","VerticalNavMenuGroup","item","groupOpen","menuHover","activeItem","parentItem","routerProps","groupActive","currentActiveGroup","setGroupOpen","setActiveItem","menuCollapsed","setGroupActive","setCurrentActiveGroup","currentActiveItem","rest","t","location","currentURL","pathname","toggleOpenGroup","parent","openGroup","activeGroup","includes","id","splice","indexOf","children","push","onCollapseClick","e","preventDefault","index","openClassCondition","open","icon","title","badge","badgeText"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Collapse, Badge } from 'reactstrap'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupOpen,\r\n  menuHover,\r\n  activeItem,\r\n  parentItem,\r\n  routerProps,\r\n  groupActive,\r\n  currentActiveGroup,\r\n  setGroupOpen,\r\n  setActiveItem,\r\n  menuCollapsed,\r\n  setGroupActive,\r\n  setCurrentActiveGroup,\r\n  currentActiveItem,\r\n  ...rest\r\n}) => {\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggle Open Group\r\n  const toggleOpenGroup = (item, parent) => {\r\n    let openGroup = groupOpen\r\n    const activeGroup = groupActive\r\n\r\n    // ** If Group is already open and clicked, close the group\r\n    if (openGroup.includes(item.id)) {\r\n      openGroup.splice(openGroup.indexOf(item.id), 1)\r\n\r\n      // ** If clicked Group has open group children, Also remove those children to close those groups\r\n      if (item.children) {\r\n        removeChildren(item.children, openGroup, groupActive)\r\n      }\r\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\r\n      // ** If Group clicked is Active Group\r\n\r\n      // ** If Active group is closed and clicked again, we should open active group else close active group\r\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\r\n        activeGroup.push(item.id)\r\n      } else {\r\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\r\n      }\r\n\r\n      // ** Update Active Group\r\n      setGroupActive([...activeGroup])\r\n    } else if (parent) {\r\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\r\n      if (parent.children) {\r\n        removeChildren(parent.children, openGroup, groupActive)\r\n      }\r\n\r\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    } else {\r\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\r\n\r\n      // ** Empty Open Group array\r\n      openGroup = []\r\n\r\n      // ** Push current clicked group item to Open Group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    }\r\n    setGroupOpen([...openGroup])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    toggleOpenGroup(item, parentItem)\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\r\n    } else {\r\n      const index = groupActive.indexOf(item.id)\r\n      if (index > -1) groupActive.splice(index, 1)\r\n    }\r\n    setGroupActive([...groupActive])\r\n    setCurrentActiveGroup([...groupActive])\r\n    setGroupOpen([])\r\n  }, [location])\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active':\r\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            {...rest}\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            currentActiveGroup={currentActiveGroup}\r\n            setCurrentActiveGroup={setCurrentActiveGroup}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n"]},"metadata":{},"sourceType":"module"}