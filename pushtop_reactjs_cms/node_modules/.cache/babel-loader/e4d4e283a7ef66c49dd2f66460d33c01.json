{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\components\\\\avatar\\\\index.js\";\n// ** React Imports\nimport { forwardRef } from 'react'; // ** Third Party Components\n\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames'; // ** Reactstrap Imports\n\nimport { Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props; // ** Function to extract initials from content\n\n  const getInitials = str => {\n    const results = [];\n    const wordArray = str.split(' ');\n    wordArray.forEach(e => {\n      results.push(e[0]);\n    });\n    return results.join('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    className: classnames('avatar', {\n      [className]: className,\n      [`bg-${color}`]: color,\n      [`avatar-${size}`]: size\n    }),\n    ref: ref,\n    ...rest,\n    children: [img === false || img === undefined ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames('avatar-content', {\n        'position-relative': badgeUp\n      }),\n      style: contentStyles,\n      children: [initials ? getInitials(content) : content, icon ? icon : null, badgeUp ? /*#__PURE__*/_jsxDEV(Badge, {\n        color: badgeColor ? badgeColor : 'primary',\n        className: \"badge-sm badge-up\",\n        pill: true,\n        children: badgeText ? badgeText : '0'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classnames({\n        [imgClassName]: imgClassName\n      }),\n      src: img,\n      alt: \"avatarImg\",\n      height: imgHeight && !size ? imgHeight : 32,\n      width: imgWidth && !size ? imgWidth : 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), status ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames({\n        [`avatar-status-${status}`]: status,\n        [`avatar-status-${size}`]: size\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Avatar;\nexport default Avatar; // ** PropTypes\n\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf(['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light-primary', 'light-secondary', 'light-success', 'light-danger', 'light-info', 'light-warning', 'light-dark']),\n  color: Proptypes.oneOf(['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light-primary', 'light-secondary', 'light-success', 'light-danger', 'light-info', 'light-warning', 'light-dark']),\n\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.');\n    }\n\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.');\n    }\n\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!');\n    }\n  }\n\n}; // ** Default Props\n\nAvatar.defaultProps = {\n  tag: 'div'\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Avatar$forwardRef\");\n$RefreshReg$(_c2, \"Avatar\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/components/avatar/index.js"],"names":["forwardRef","Proptypes","classnames","Badge","Avatar","props","ref","img","size","icon","color","status","badgeUp","content","tag","Tag","initials","imgWidth","className","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","getInitials","str","results","wordArray","split","forEach","e","push","join","undefined","propTypes","node","src","string","bool","object","oneOf","oneOfType","func","number","Error","defaultProps"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}