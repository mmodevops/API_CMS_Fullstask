{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\views\\\\forms\\\\validation\\\\ValidationThirdPartyComponents.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, Fragment } from 'react'; // ** Third Party Components\n\nimport Select from 'react-select';\nimport classnames from 'classnames';\nimport Cleave from 'cleave.js/react';\nimport { Check } from 'react-feather';\nimport { toast } from 'react-toastify';\nimport Flatpickr from 'react-flatpickr';\nimport 'cleave.js/dist/addons/cleave-phone.us';\nimport { useForm, Controller } from 'react-hook-form'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Utils\n\nimport { selectThemeColors } from '@utils'; // ** Reactstrap Imports\n\nimport { Card, Form, Label, Button, CardBody, CardTitle, CardHeader, InputGroup, InputGroupText } from 'reactstrap'; // ** Styles\n\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss';\nimport '@styles/react/pages/page-form-validation.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colourOptions = [{\n  value: 'ocean',\n  label: 'Ocean'\n}, {\n  value: 'blue',\n  label: 'Blue'\n}, {\n  value: 'purple',\n  label: 'Purple'\n}, {\n  value: 'red',\n  label: 'Red'\n}, {\n  value: 'orange',\n  label: 'Orange'\n}];\nconst defaultValues = {\n  phoneNumber: '',\n  ReactSelect: null,\n  reactFlatpickr: null\n};\n\nconst ValidationThirdPartyComponents = () => {\n  _s();\n\n  // ** State\n  const [data, setData] = useState(null); // ** Hooks\n\n  const {\n    reset,\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues\n  });\n\n  const onSubmit = data => {\n    setData(data);\n\n    if (data.ReactSelect !== null && data.reactFlatpickr !== null && data.phoneNumber.length) {\n      toast.success( /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toastify-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"sm\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(Check, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"toast-title\",\n              children: \"Form Submitted!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toastify-body\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-unstyled mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"React Select:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), \": \", data.ReactSelect.value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Flatpickr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), \": \", String(new Date(data.reactFlatpickr[0]))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Input Mask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), \": \", data.phoneNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), {\n        icon: false,\n        hideProgressBar: true\n      });\n    }\n  };\n\n  const handleReset = () => {\n    reset({\n      phoneNumber: '',\n      ReactSelect: '',\n      reactFlatpickr: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Third Party Components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"react-select\",\n            children: \"React Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            id: \"react-select\",\n            control: control,\n            name: \"ReactSelect\",\n            render: _ref => {\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Select, {\n                isClearable: true,\n                options: colourOptions,\n                classNamePrefix: \"select\",\n                theme: selectThemeColors,\n                className: classnames('react-select', {\n                  'is-invalid': data !== null && data.ReactSelect === null\n                }),\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"react-flatpickr\",\n            children: \"React Flatpickr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            id: \"react-flatpickr\",\n            name: \"reactFlatpickr\",\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Flatpickr, { ...field,\n                className: classnames('form-control', {\n                  'is-invalid': data !== null && data.reactFlatpickr === null\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"phone-number\",\n            children: \"Input Mask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"input-group-merge\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n              className: classnames({\n                'is-invalid': data !== null && (data.phoneNumber === null || !data.phoneNumber.length)\n              }),\n              children: \"US (+1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              id: \"phone-number\",\n              name: \"phoneNumber\",\n              control: control,\n              placeholder: \"1 234 567 8900\",\n              render: _ref3 => {\n                let {\n                  field\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(Cleave, { ...field,\n                  className: classnames('form-control', {\n                    'is-invalid': data !== null && (data.phoneNumber === null || !data.phoneNumber.length)\n                  }),\n                  options: {\n                    phone: true,\n                    phoneRegionCode: 'US'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-1\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"secondary\",\n            type: \"reset\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ValidationThirdPartyComponents, \"neoMB7jJdlgS/xJuT2R9sYYVRxw=\", false, function () {\n  return [useForm];\n});\n\n_c = ValidationThirdPartyComponents;\nexport default ValidationThirdPartyComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationThirdPartyComponents\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/views/forms/validation/ValidationThirdPartyComponents.js"],"names":["useState","Fragment","Select","classnames","Cleave","Check","toast","Flatpickr","useForm","Controller","Avatar","selectThemeColors","Card","Form","Label","Button","CardBody","CardTitle","CardHeader","InputGroup","InputGroupText","colourOptions","value","label","defaultValues","phoneNumber","ReactSelect","reactFlatpickr","ValidationThirdPartyComponents","data","setData","reset","handleSubmit","control","onSubmit","length","success","String","Date","icon","hideProgressBar","handleReset","field","phone","phoneRegionCode"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport Cleave from 'cleave.js/react'\r\nimport { Check } from 'react-feather'\r\nimport { toast } from 'react-toastify'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, Form, Label, Button, CardBody, CardTitle, CardHeader, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/pages/page-form-validation.scss'\r\n\r\nconst colourOptions = [\r\n  { value: 'ocean', label: 'Ocean' },\r\n  { value: 'blue', label: 'Blue' },\r\n  { value: 'purple', label: 'Purple' },\r\n  { value: 'red', label: 'Red' },\r\n  { value: 'orange', label: 'Orange' }\r\n]\r\n\r\nconst defaultValues = {\r\n  phoneNumber: '',\r\n  ReactSelect: null,\r\n  reactFlatpickr: null\r\n}\r\n\r\nconst ValidationThirdPartyComponents = () => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  // ** Hooks\r\n  const { reset, handleSubmit, control } = useForm({ defaultValues })\r\n\r\n  const onSubmit = data => {\r\n    setData(data)\r\n    if (data.ReactSelect !== null && data.reactFlatpickr !== null && data.phoneNumber.length) {\r\n      toast.success(\r\n        <Fragment>\r\n          <div className='toastify-header'>\r\n            <div className='title-wrapper'>\r\n              <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n              <h6 className='toast-title'>Form Submitted!</h6>\r\n            </div>\r\n          </div>\r\n          <div className='toastify-body'>\r\n            <ul className='list-unstyled mb-0'>\r\n              <li>\r\n                <strong>React Select:</strong>: {data.ReactSelect.value}\r\n              </li>\r\n              <li>\r\n                <strong>Flatpickr</strong>: {String(new Date(data.reactFlatpickr[0]))}\r\n              </li>\r\n              <li>\r\n                <strong>Input Mask</strong>: {data.phoneNumber}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Fragment>,\r\n        { icon: false, hideProgressBar: true }\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    reset({\r\n      phoneNumber: '',\r\n      ReactSelect: '',\r\n      reactFlatpickr: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Third Party Components</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='react-select'>\r\n              React Select\r\n            </Label>\r\n            <Controller\r\n              id='react-select'\r\n              control={control}\r\n              name='ReactSelect'\r\n              render={({ field }) => (\r\n                <Select\r\n                  isClearable\r\n                  options={colourOptions}\r\n                  classNamePrefix='select'\r\n                  theme={selectThemeColors}\r\n                  className={classnames('react-select', { 'is-invalid': data !== null && data.ReactSelect === null })}\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='react-flatpickr'>\r\n              React Flatpickr\r\n            </Label>\r\n            <Controller\r\n              control={control}\r\n              id='react-flatpickr'\r\n              name='reactFlatpickr'\r\n              render={({ field }) => (\r\n                <Flatpickr\r\n                  {...field}\r\n                  className={classnames('form-control', {\r\n                    'is-invalid': data !== null && data.reactFlatpickr === null\r\n                  })}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className='mb-1'>\r\n            <Label className='form-label' for='phone-number'>\r\n              Input Mask\r\n            </Label>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText\r\n                className={classnames({\r\n                  'is-invalid': data !== null && (data.phoneNumber === null || !data.phoneNumber.length)\r\n                })}\r\n              >\r\n                US (+1)\r\n              </InputGroupText>\r\n              <Controller\r\n                id='phone-number'\r\n                name='phoneNumber'\r\n                control={control}\r\n                placeholder='1 234 567 8900'\r\n                render={({ field }) => (\r\n                  <Cleave\r\n                    {...field}\r\n                    className={classnames('form-control', {\r\n                      'is-invalid': data !== null && (data.phoneNumber === null || !data.phoneNumber.length)\r\n                    })}\r\n                    options={{ phone: true, phoneRegionCode: 'US' }}\r\n                  />\r\n                )}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n          <div className='d-flex'>\r\n            <Button className='me-1' color='primary' type='submit'>\r\n              Submit\r\n            </Button>\r\n            <Button outline color='secondary' type='reset' onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ValidationThirdPartyComponents\r\n"]},"metadata":{},"sourceType":"module"}