{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\components\\\\sidebar\\\\index.js\";\n// ** Third Party Components\nimport { X } from 'react-feather';\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props; // ** If user passes custom close btn render that else default close btn\n\n  const renderCloseBtn = closeBtn ? closeBtn : /*#__PURE__*/_jsxDEV(X, {\n    className: \"cursor-pointer\",\n    size: 15,\n    onClick: toggleSidebar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 48\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: toggleSidebar,\n    contentClassName: classnames('overflow-hidden', {\n      [contentClassName]: contentClassName\n    }),\n    modalClassName: classnames('modal-slide-in', {\n      [wrapperClassName]: wrapperClassName\n    }),\n    className: classnames({\n      [className]: className,\n      'sidebar-lg': size === 'lg',\n      'sidebar-sm': size === 'sm'\n    })\n    /*eslint-disable */\n    ,\n    ...(width !== undefined ? {\n      style: {\n        width: String(width) + 'px'\n      }\n    } : {}),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: classnames({\n        [headerClassName]: headerClassName\n      }),\n      toggle: toggleSidebar,\n      close: renderCloseBtn,\n      tag: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-middle\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      options: {\n        wheelPropagation: false\n      },\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: classnames('flex-grow-1', {\n          [bodyClassName]: bodyClassName\n        }),\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Sidebar;\nexport default Sidebar; // ** PropTypes\n\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/components/sidebar/index.js"],"names":["X","Proptypes","classnames","PerfectScrollbar","Modal","ModalHeader","ModalBody","Sidebar","props","open","size","title","width","children","closeBtn","className","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","renderCloseBtn","undefined","style","String","wheelPropagation","propTypes","string","bool","isRequired","any","oneOf","func","oneOfType","number"],"mappings":"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","sourcesContent":["// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}