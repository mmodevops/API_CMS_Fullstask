{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\VerticalNavMenuLink.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next'; // ** Reactstrap Imports\n\nimport { Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerticalNavMenuLink = _ref => {\n  _s();\n\n  let {\n    item,\n    activeItem,\n    setActiveItem,\n    currentActiveItem\n  } = _ref;\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink; // ** Hooks\n\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation();\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames({\n      'nav-item': !item.children,\n      disabled: item.disabled,\n      active: item.navLink === activeItem\n    }),\n    children: /*#__PURE__*/_jsxDEV(LinkTag, {\n      className: \"d-flex align-items-center\",\n      target: item.newTab ? '_blank' : undefined\n      /*eslint-disable */\n      ,\n      ...(item.externalLink === true ? {\n        href: item.navLink || '/'\n      } : {\n        to: item.navLink || '/',\n        isActive: match => {\n          if (!match) {\n            return false;\n          }\n\n          if (match.url && match.url !== '' && match.url === item.navLink) {\n            currentActiveItem = item.navLink;\n          }\n        }\n      }),\n      onClick: e => {\n        if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\n          e.preventDefault();\n        }\n      },\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"menu-item text-truncate\",\n        children: t(item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), item.badge && item.badgeText ? /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"ms-auto me-1\",\n        color: item.badge,\n        pill: true,\n        children: item.badgeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerticalNavMenuLink, \"bKCvMKVdRRGLi8ctdidDVb91M6Q=\", false, function () {\n  return [useTranslation, useLocation];\n});\n\n_c = VerticalNavMenuLink;\nexport default VerticalNavMenuLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalNavMenuLink\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js"],"names":["useEffect","NavLink","useLocation","classnames","useTranslation","Badge","VerticalNavMenuLink","item","activeItem","setActiveItem","currentActiveItem","LinkTag","externalLink","t","location","children","disabled","active","navLink","newTab","undefined","href","to","isActive","match","url","e","length","preventDefault","icon","title","badge","badgeText"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAEA,MAAMC,mBAAmB,GAAG,QAKtB;AAAA;;AAAA,MALuB;AAC3BC,IAAAA,IAD2B;AAE3BC,IAAAA,UAF2B;AAG3BC,IAAAA,aAH2B;AAI3BC,IAAAA;AAJ2B,GAKvB;AACJ;AACA,QAAMC,OAAO,GAAGJ,IAAI,CAACK,YAAL,GAAoB,GAApB,GAA0BX,OAA1C,CAFI,CAIJ;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,QAAQ,GAAGZ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,iBAAiB,KAAK,IAA1B,EAAgC;AAC9BD,MAAAA,aAAa,CAACC,iBAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACI,QAAD,CAJM,CAAT;AAMA,sBACE;AACE,IAAA,SAAS,EAAEX,UAAU,CAAC;AACpB,kBAAY,CAACI,IAAI,CAACQ,QADE;AAEpBC,MAAAA,QAAQ,EAAET,IAAI,CAACS,QAFK;AAGpBC,MAAAA,MAAM,EAAEV,IAAI,CAACW,OAAL,KAAiBV;AAHL,KAAD,CADvB;AAAA,2BAOE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,MAAM,EAAED,IAAI,CAACY,MAAL,GAAc,QAAd,GAAyBC;AACjC;AAHF;AAAA,UAIOb,IAAI,CAACK,YAAL,KAAsB,IAAtB,GACD;AACES,QAAAA,IAAI,EAAEd,IAAI,CAACW,OAAL,IAAgB;AADxB,OADC,GAID;AACEI,QAAAA,EAAE,EAAEf,IAAI,CAACW,OAAL,IAAgB,GADtB;AAEEK,QAAAA,QAAQ,EAAEC,KAAK,IAAI;AACjB,cAAI,CAACA,KAAL,EAAY;AACV,mBAAO,KAAP;AACD;;AAED,cACEA,KAAK,CAACC,GAAN,IACAD,KAAK,CAACC,GAAN,KAAc,EADd,IAEAD,KAAK,CAACC,GAAN,KAAclB,IAAI,CAACW,OAHrB,EAIE;AACAR,YAAAA,iBAAiB,GAAGH,IAAI,CAACW,OAAzB;AACD;AACF;AAdH,OARN;AAwBE,MAAA,OAAO,EAAEQ,CAAC,IAAI;AACZ,YACEnB,IAAI,CAACW,OAAL,CAAaS,MAAb,KAAwB,CAAxB,IACApB,IAAI,CAACW,OAAL,KAAiB,GADjB,IAEAX,IAAI,CAACS,QAAL,KAAkB,IAHpB,EAIE;AACAU,UAAAA,CAAC,CAACE,cAAF;AACD;AACF,OAhCH;AAAA,iBAkCGrB,IAAI,CAACsB,IAlCR,eAmCE;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA,kBAA2ChB,CAAC,CAACN,IAAI,CAACuB,KAAN;AAA5C;AAAA;AAAA;AAAA;AAAA,cAnCF,EAqCGvB,IAAI,CAACwB,KAAL,IAAcxB,IAAI,CAACyB,SAAnB,gBACC,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,KAAK,EAAEzB,IAAI,CAACwB,KAA5C;AAAmD,QAAA,IAAI,MAAvD;AAAA,kBACGxB,IAAI,CAACyB;AADR;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAzCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAxED;;GAAM1B,mB;UAUUF,c,EACGF,W;;;KAXbI,mB;AA0EN,eAAeA,mBAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  activeItem,\r\n  setActiveItem,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: match => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (\r\n                  match.url &&\r\n                  match.url !== '' &&\r\n                  match.url === item.navLink\r\n                ) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        onClick={e => {\r\n          if (\r\n            item.navLink.length === 0 ||\r\n            item.navLink === '#' ||\r\n            item.disabled === true\r\n          ) {\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n"]},"metadata":{},"sourceType":"module"}