{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\views\\\\ui-elements\\\\cards\\\\statistics\\\\OrdersReceived.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect, useState } from 'react'; // ** Third Party Components\n\nimport axios from 'axios';\nimport { Package } from 'react-feather'; // ** Custom Components\n\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersReceived = _ref => {\n  _s();\n\n  let {\n    kFormatter,\n    warning\n  } = _ref;\n  // ** State\n  const [data, setData] = useState(null);\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data));\n    return () => setData(null);\n  }, []);\n  return data !== null ? /*#__PURE__*/_jsxDEV(StatsWithAreaChart, {\n    icon: /*#__PURE__*/_jsxDEV(Package, {\n      size: 21\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this),\n    color: \"warning\",\n    stats: kFormatter(data.analyticsData.orders),\n    statTitle: \"Orders Received\",\n    options: options,\n    series: data.series,\n    type: \"area\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(OrdersReceived, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = OrdersReceived;\nexport default OrdersReceived;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersReceived\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/views/ui-elements/cards/statistics/OrdersReceived.js"],"names":["useEffect","useState","axios","Package","StatsWithAreaChart","OrdersReceived","kFormatter","warning","data","setData","options","chart","id","toolbar","show","sparkline","enabled","grid","colors","dataLabels","stroke","curve","width","fill","type","gradient","shadeIntensity","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","get","then","res","analyticsData","orders","series"],"mappings":";;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;;;AAEA,MAAMC,cAAc,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA4B;AAClD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMS,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAE,SADC;AAELC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OAFJ;AAKLC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE;AADA;AALN,KADO;AAUdC,IAAAA,IAAI,EAAE;AACJH,MAAAA,IAAI,EAAE;AADF,KAVQ;AAadI,IAAAA,MAAM,EAAE,CAACX,OAAD,CAbM;AAcdY,IAAAA,UAAU,EAAE;AACVH,MAAAA,OAAO,EAAE;AADC,KAdE;AAiBdI,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KAjBM;AAqBdC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,UADF;AAEJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,cAAc,EAAE,GADR;AAERC,QAAAA,WAAW,EAAE,GAFL;AAGRC,QAAAA,SAAS,EAAE,GAHH;AAIRC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR;AAJC;AAFN,KArBQ;AA+BdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNjB,QAAAA,IAAI,EAAE;AADA,OADH;AAILkB,MAAAA,UAAU,EAAE;AACVlB,QAAAA,IAAI,EAAE;AADI;AAJP,KA/BO;AAuCdmB,IAAAA,KAAK,EAAE;AACLF,MAAAA,MAAM,EAAE;AACNjB,QAAAA,IAAI,EAAE;AADA;AADH,KAvCO;AA4CdoB,IAAAA,OAAO,EAAE;AACPC,MAAAA,CAAC,EAAE;AAAErB,QAAAA,IAAI,EAAE;AAAR;AADI;AA5CK,GAAhB;AAiDAd,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACkC,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAA+CC,GAAG,IAAI7B,OAAO,CAAC6B,GAAG,CAAC9B,IAAL,CAA7D;AACA,WAAO,MAAMC,OAAO,CAAC,IAAD,CAApB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOD,IAAI,KAAK,IAAT,gBACL,QAAC,kBAAD;AACE,IAAA,IAAI,eAAE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YADR;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,KAAK,EAAEF,UAAU,CAACE,IAAI,CAAC+B,aAAL,CAAmBC,MAApB,CAHnB;AAIE,IAAA,SAAS,EAAC,iBAJZ;AAKE,IAAA,OAAO,EAAE9B,OALX;AAME,IAAA,MAAM,EAAEF,IAAI,CAACiC,MANf;AAOE,IAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,UADK,GAUH,IAVJ;AAWD,CArED;;GAAMpC,c;;KAAAA,c;AAsEN,eAAeA,cAAf","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Package } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst OrdersReceived = ({ kFormatter, warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Package size={21} />}\r\n      color='warning'\r\n      stats={kFormatter(data.analyticsData.orders)}\r\n      statTitle='Orders Received'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default OrdersReceived\r\n"]},"metadata":{},"sourceType":"module"}