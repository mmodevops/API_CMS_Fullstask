{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\layouts\\\\components\\\\navbar\\\\IntlDropdown.js\",\n    _s = $RefreshSig$();\n\n// ** Third Party Components\nimport { useTranslation } from 'react-i18next';\nimport ReactCountryFlag from 'react-country-flag'; // ** Reactstrap Imports\n\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IntlDropdown = () => {\n  _s();\n\n  // ** Hooks\n  const {\n    i18n\n  } = useTranslation(); // ** Vars\n\n  const langObj = {\n    en: 'English',\n    de: 'German',\n    fr: 'French',\n    pt: 'Portuguese'\n  }; // ** Function to switch Language\n\n  const handleLangUpdate = (e, lang) => {\n    e.preventDefault();\n    i18n.changeLanguage(lang);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n    href: \"/\",\n    tag: \"li\",\n    className: \"dropdown-language nav-item\",\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      href: \"/\",\n      tag: \"a\",\n      className: \"nav-link\",\n      onClick: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n        svg: true,\n        className: \"country-flag flag-icon\",\n        countryCode: i18n.language === 'en' ? 'us' : i18n.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"selected-language\",\n        children: langObj[i18n.language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      className: \"mt-0\",\n      end: true,\n      children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n        href: \"/\",\n        tag: \"a\",\n        onClick: e => handleLangUpdate(e, 'en'),\n        children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n          className: \"country-flag\",\n          countryCode: \"us\",\n          svg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-1\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n        href: \"/\",\n        tag: \"a\",\n        onClick: e => handleLangUpdate(e, 'fr'),\n        children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n          className: \"country-flag\",\n          countryCode: \"fr\",\n          svg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-1\",\n          children: \"French\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n        href: \"/\",\n        tag: \"a\",\n        onClick: e => handleLangUpdate(e, 'de'),\n        children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n          className: \"country-flag\",\n          countryCode: \"de\",\n          svg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-1\",\n          children: \"German\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n        href: \"/\",\n        tag: \"a\",\n        onClick: e => handleLangUpdate(e, 'pt'),\n        children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n          className: \"country-flag\",\n          countryCode: \"pt\",\n          svg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-1\",\n          children: \"Portuguese\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IntlDropdown, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n  return [useTranslation];\n});\n\n_c = IntlDropdown;\nexport default IntlDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"IntlDropdown\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/layouts/components/navbar/IntlDropdown.js"],"names":["useTranslation","ReactCountryFlag","UncontrolledDropdown","DropdownMenu","DropdownItem","DropdownToggle","IntlDropdown","i18n","langObj","en","de","fr","pt","handleLangUpdate","e","lang","preventDefault","changeLanguage","language"],"mappings":"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","sourcesContent":["// ** Third Party Components\r\nimport { useTranslation } from 'react-i18next'\r\nimport ReactCountryFlag from 'react-country-flag'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst IntlDropdown = () => {\r\n  // ** Hooks\r\n  const { i18n } = useTranslation()\r\n\r\n  // ** Vars\r\n  const langObj = {\r\n    en: 'English',\r\n    de: 'German',\r\n    fr: 'French',\r\n    pt: 'Portuguese'\r\n  }\r\n\r\n  // ** Function to switch Language\r\n  const handleLangUpdate = (e, lang) => {\r\n    e.preventDefault()\r\n    i18n.changeLanguage(lang)\r\n  }\r\n\r\n  return (\r\n    <UncontrolledDropdown href='/' tag='li' className='dropdown-language nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link' onClick={e => e.preventDefault()}>\r\n        <ReactCountryFlag\r\n          svg\r\n          className='country-flag flag-icon'\r\n          countryCode={i18n.language === 'en' ? 'us' : i18n.language}\r\n        />\r\n        <span className='selected-language'>{langObj[i18n.language]}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu className='mt-0' end>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'en')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='us' svg />\r\n          <span className='ms-1'>English</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'fr')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='fr' svg />\r\n          <span className='ms-1'>French</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'de')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='de' svg />\r\n          <span className='ms-1'>German</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'pt')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='pt' svg />\r\n          <span className='ms-1'>Portuguese</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default IntlDropdown\r\n"]},"metadata":{},"sourceType":"module"}