{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\layouts\\\\VerticalLayout.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // ** Store & Actions\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { ArrowUp } from 'react-feather'; // ** Reactstrap Imports\n\nimport { Navbar, Button } from 'reactstrap'; // ** Configs\n\nimport themeConfig from '@configs/themeConfig'; // ** Custom Components\n\nimport Customizer from '@components/customizer';\nimport ScrollToTop from '@components/scrolltop';\nimport FooterComponent from './components/footer';\nimport NavbarComponent from './components/navbar';\nimport SidebarComponent from './components/menu/vertical-menu'; // ** Custom Hooks\n\nimport { useRTL } from '@hooks/useRTL';\nimport { useSkin } from '@hooks/useSkin';\nimport { useNavbarType } from '@hooks/useNavbarType';\nimport { useFooterType } from '@hooks/useFooterType';\nimport { useNavbarColor } from '@hooks/useNavbarColor'; // ** Styles\n\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss';\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerticalLayout = props => {\n  _s();\n\n  // ** Props\n  const {\n    menu,\n    navbar,\n    footer,\n    menuData,\n    children,\n    routerProps,\n    setLastLayout,\n    currentActiveItem\n  } = props; // ** Hooks\n\n  const [isRtl, setIsRtl] = useRTL();\n  const {\n    skin,\n    setSkin\n  } = useSkin();\n  const {\n    navbarType,\n    setNavbarType\n  } = useNavbarType();\n  const {\n    footerType,\n    setFooterType\n  } = useFooterType();\n  const {\n    navbarColor,\n    setNavbarColor\n  } = useNavbarColor(); // ** States\n\n  const [isMounted, setIsMounted] = useState(false);\n  const [menuVisibility, setMenuVisibility] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth); // ** Store Vars\n\n  const dispatch = useDispatch();\n  const layoutStore = useSelector(state => state.layout); // ** Update Window Width\n\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth);\n  }; // ** Vars\n\n\n  const location = useLocation();\n  const contentWidth = layoutStore.contentWidth;\n  const menuCollapsed = layoutStore.menuCollapsed;\n  const isHidden = layoutStore.menuHidden; // ** Toggles Menu Collapsed\n\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val)); // ** Handles Content Width\n\n\n  const setContentWidth = val => dispatch(handleContentWidth(val)); // ** Handles Content Width\n\n\n  const setIsHidden = val => dispatch(handleMenuHidden(val)); //** This function will detect the Route Change and will hide the menu on menu item click\n\n\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false);\n    }\n  }, [location]); //** Sets Window Size & Layout Props\n\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth);\n    }\n  }, [windowWidth]); //** ComponentDidMount\n\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, []); // ** Vars\n\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  };\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  };\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  };\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white';\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(`wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'}`, {\n      // Modern Menu\n      'vertical-menu-modern': windowWidth >= 1200,\n      'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n      'menu-expanded': !menuCollapsed && windowWidth > 1200,\n      // Overlay Menu\n      'vertical-overlay-menu': windowWidth < 1200,\n      'menu-hide': !menuVisibility && windowWidth < 1200,\n      'menu-open': menuVisibility && windowWidth < 1200\n    }),\n    ...(isHidden ? {\n      'data-col': '1-column'\n    } : {}),\n    children: [!isHidden ? /*#__PURE__*/_jsxDEV(SidebarComponent, {\n      skin: skin,\n      menu: menu,\n      menuData: menuData,\n      routerProps: routerProps,\n      menuCollapsed: menuCollapsed,\n      menuVisibility: menuVisibility,\n      setMenuCollapsed: setMenuCollapsed,\n      setMenuVisibility: setMenuVisibility,\n      currentActiveItem: currentActiveItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      container: false,\n      light: skin !== 'dark',\n      dark: skin === 'dark' || bgColorCondition,\n      color: bgColorCondition ? navbarColor : undefined,\n      className: classnames(`header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container d-flex content\",\n        children: navbar ? navbar : /*#__PURE__*/_jsxDEV(NavbarComponent, {\n          setMenuVisibility: setMenuVisibility,\n          skin: skin,\n          setSkin: setSkin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('sidenav-overlay', {\n        show: menuVisibility\n      }),\n      onClick: () => setMenuVisibility(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), themeConfig.layout.customizer === true ? /*#__PURE__*/_jsxDEV(Customizer, {\n      skin: skin,\n      setSkin: setSkin,\n      footerType: footerType,\n      setFooterType: setFooterType,\n      navbarType: navbarType,\n      setNavbarType: setNavbarType,\n      navbarColor: navbarColor,\n      setNavbarColor: setNavbarColor,\n      isRtl: isRtl,\n      setIsRtl: setIsRtl,\n      layout: props.layout,\n      setLayout: props.setLayout,\n      setLastLayout: setLastLayout,\n      isHidden: isHidden,\n      setIsHidden: setIsHidden,\n      contentWidth: contentWidth,\n      setContentWidth: setContentWidth,\n      menuCollapsed: menuCollapsed,\n      setMenuCollapsed: setMenuCollapsed,\n      transition: props.transition,\n      setTransition: props.setTransition,\n      themeConfig: themeConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n        'd-none': footerType === 'hidden'\n      }),\n      children: footer ? footer : /*#__PURE__*/_jsxDEV(FooterComponent, {\n        footerType: footerType,\n        footerClasses: footerClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), themeConfig.layout.scrollTop === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-to-top\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToTop, {\n        showOffset: 300,\n        className: \"scroll-top d-block\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-icon\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(ArrowUp, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerticalLayout, \"z72h7BvMd889GHT9IHTd5yCvGik=\", false, function () {\n  return [useRTL, useSkin, useNavbarType, useFooterType, useNavbarColor, useDispatch, useSelector, useLocation];\n});\n\n_c = VerticalLayout;\nexport default VerticalLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalLayout\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/layouts/VerticalLayout.js"],"names":["useState","useEffect","useLocation","useSelector","useDispatch","handleMenuCollapsed","handleContentWidth","handleMenuHidden","classnames","ArrowUp","Navbar","Button","themeConfig","Customizer","ScrollToTop","FooterComponent","NavbarComponent","SidebarComponent","useRTL","useSkin","useNavbarType","useFooterType","useNavbarColor","VerticalLayout","props","menu","navbar","footer","menuData","children","routerProps","setLastLayout","currentActiveItem","isRtl","setIsRtl","skin","setSkin","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isMounted","setIsMounted","menuVisibility","setMenuVisibility","windowWidth","setWindowWidth","window","innerWidth","dispatch","layoutStore","state","layout","handleWindowWidth","location","contentWidth","menuCollapsed","isHidden","menuHidden","setMenuCollapsed","val","setContentWidth","setIsHidden","undefined","addEventListener","footerClasses","static","sticky","hidden","navbarWrapperClasses","floating","navbarClasses","bgColorCondition","show","customizer","setLayout","transition","setTransition","scrollTop"],"mappings":"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","sourcesContent":["// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  handleMenuCollapsed,\r\n  handleContentWidth,\r\n  handleMenuHidden\r\n} from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const {\r\n    menu,\r\n    navbar,\r\n    footer,\r\n    menuData,\r\n    children,\r\n    routerProps,\r\n    setLastLayout,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { skin, setSkin } = useSkin()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating:\r\n      contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition =\r\n    navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${\r\n          navbarWrapperClasses[navbarType] || 'navbar-floating'\r\n        } ${footerClasses[footerType] || 'footer-static'}`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuData={menuData}\r\n          routerProps={routerProps}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${\r\n            navbarClasses[navbarType] || 'floating-nav'\r\n          } navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? (\r\n            navbar\r\n          ) : (\r\n            <NavbarComponent\r\n              setMenuVisibility={setMenuVisibility}\r\n              skin={skin}\r\n              setSkin={setSkin}\r\n            />\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          setLastLayout={setLastLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          menuCollapsed={menuCollapsed}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(\r\n          `footer footer-light ${footerClasses[footerType] || 'footer-static'}`,\r\n          {\r\n            'd-none': footerType === 'hidden'\r\n          }\r\n        )}\r\n      >\r\n        {footer ? (\r\n          footer\r\n        ) : (\r\n          <FooterComponent\r\n            footerType={footerType}\r\n            footerClasses={footerClasses}\r\n          />\r\n        )}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n"]},"metadata":{},"sourceType":"module"}