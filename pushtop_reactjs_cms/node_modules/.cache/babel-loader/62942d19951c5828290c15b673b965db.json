{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\index.js\";\n// ** React Imports\nimport { Suspense, lazy } from 'react';\nimport ReactDOM from 'react-dom'; // ** Redux Imports\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'; // ** Intl, CASL & ThemeColors Context\n\nimport ability from './configs/acl/ability';\nimport { ToastContainer } from 'react-toastify';\nimport { AbilityContext } from './utility/context/Can';\nimport { ThemeContext } from './utility/context/ThemeColors'; // ** i18n\n\nimport './configs/i18n'; // ** Spinner (Splash Screen)\n\nimport Spinner from './@core/components/spinner/Fallback-spinner'; // ** Ripple Button\n\nimport './@core/components/ripple-button'; // ** Fake Database\n\nimport './@fake-db'; // ** PrismJS\n\nimport 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-jsx.min'; // ** React Perfect Scrollbar\n\nimport 'react-perfect-scrollbar/dist/css/styles.css'; // ** React Toastify\n\nimport '@styles/react/libs/toastify/toastify.scss'; // ** Core styles\n\nimport './@core/assets/fonts/feather/iconfont.css';\nimport './@core/scss/core.scss';\nimport './assets/scss/style.scss'; // ** Service Worker\n\nimport * as serviceWorker from './serviceWorker'; // ** Lazy load app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyApp = /*#__PURE__*/lazy(_c = () => import('./App'));\n_c2 = LazyApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(AbilityContext.Provider, {\n      value: ability,\n      children: /*#__PURE__*/_jsxDEV(ThemeContext, {\n        children: [/*#__PURE__*/_jsxDEV(LazyApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n          newestOnTop: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LazyApp$lazy\");\n$RefreshReg$(_c2, \"LazyApp\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/index.js"],"names":["Suspense","lazy","ReactDOM","Provider","store","ability","ToastContainer","AbilityContext","ThemeContext","Spinner","serviceWorker","LazyApp","render","document","getElementById","unregister"],"mappings":";AAAA;AACA,SAASA,QAAT,EAAmBC,IAAnB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,YAAT,QAA6B,+BAA7B,C,CAEA;;AACA,OAAO,gBAAP,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,6CAApB,C,CAEA;;AACA,OAAO,kCAAP,C,CAEA;;AACA,OAAO,YAAP,C,CAEA;;AACA,OAAO,SAAP;AACA,OAAO,mCAAP;AACA,OAAO,kCAAP,C,CAEA;;AACA,OAAO,6CAAP,C,CAEA;;AACA,OAAO,2CAAP,C,CAEA;;AACA,OAAO,2CAAP;AACA,OAAO,wBAAP;AACA,OAAO,0BAAP,C,CAEA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;;AACA,MAAMC,OAAO,gBAAGV,IAAI,MAAC,MAAM,OAAO,OAAP,CAAP,CAApB;MAAMU,O;AAENT,QAAQ,CAACU,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAER,KAAjB;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,2BACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAEC,OAAhC;AAAA,6BACE,QAAC,YAAD;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,cAAD;AAAgB,UAAA,WAAW;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAWEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF,E,CAcA;AACA;AACA;;AACAJ,aAAa,CAACK,UAAd","sourcesContent":["// ** React Imports\r\nimport { Suspense, lazy } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// ** Redux Imports\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\n\r\n// ** Intl, CASL & ThemeColors Context\r\nimport ability from './configs/acl/ability'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { AbilityContext } from './utility/context/Can'\r\nimport { ThemeContext } from './utility/context/ThemeColors'\r\n\r\n// ** i18n\r\nimport './configs/i18n'\r\n\r\n// ** Spinner (Splash Screen)\r\nimport Spinner from './@core/components/spinner/Fallback-spinner'\r\n\r\n// ** Ripple Button\r\nimport './@core/components/ripple-button'\r\n\r\n// ** Fake Database\r\nimport './@fake-db'\r\n\r\n// ** PrismJS\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport 'prismjs/components/prism-jsx.min'\r\n\r\n// ** React Perfect Scrollbar\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\n\r\n// ** React Toastify\r\nimport '@styles/react/libs/toastify/toastify.scss'\r\n\r\n// ** Core styles\r\nimport './@core/assets/fonts/feather/iconfont.css'\r\nimport './@core/scss/core.scss'\r\nimport './assets/scss/style.scss'\r\n\r\n// ** Service Worker\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// ** Lazy load app\r\nconst LazyApp = lazy(() => import('./App'))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={<Spinner />}>\r\n      <AbilityContext.Provider value={ability}>\r\n        <ThemeContext>\r\n          <LazyApp />\r\n          <ToastContainer newestOnTop />\r\n        </ThemeContext>\r\n      </AbilityContext.Provider>\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"]},"metadata":{},"sourceType":"module"}