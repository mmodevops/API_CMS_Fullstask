{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\pushtop_reactjs_cms\\\\src\\\\@core\\\\components\\\\avatar-group\\\\index.js\";\n// ** React Imports\nimport { Fragment } from 'react'; // ** Third Party Components\n\nimport Proptypes from 'prop-types';\nimport classnames from 'classnames'; // ** Reactstrap Imports\n\nimport { UncontrolledTooltip } from 'reactstrap'; // ** Custom Components Imports\n\nimport Avatar from '@components/avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvatarGroup = props => {\n  // ** Props\n  const {\n    data,\n    tag,\n    className\n  } = props; // ** Conditional Tag\n\n  const Tag = tag ? tag : 'div'; // ** Render Data\n\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div';\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [item.title ? /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n          placement: item.placement,\n          target: item.title.split(' ').join('-'),\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : null, !item.meta ? /*#__PURE__*/_jsxDEV(Avatar, {\n          tag: ItemTag,\n          className: classnames('pull-up', {\n            [item.className]: item.className\n          }),\n          ...(item.title ? {\n            id: item.title.split(' ').join('-')\n          } : {}),\n          ...item,\n          title: undefined,\n          meta: undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this) : null, item.meta ? /*#__PURE__*/_jsxDEV(ItemTag, {\n          className: \"d-flex align-items-center ps-1\",\n          children: item.meta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this) : null]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    className: classnames('avatar-group', {\n      [className]: className\n    }),\n    children: renderData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AvatarGroup;\nexport default AvatarGroup; // ** PropTypes\n\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarGroup\");","map":{"version":3,"sources":["E:/Project/pushtop_reactjs_cms/src/@core/components/avatar-group/index.js"],"names":["Fragment","Proptypes","classnames","UncontrolledTooltip","Avatar","AvatarGroup","props","data","tag","className","Tag","renderData","map","item","i","ItemTag","title","placement","split","join","meta","id","undefined","propTypes","array","isRequired","oneOfType","func","string"],"mappings":";AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,YAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAA2BH,KAAjC,CAF2B,CAI3B;;AACA,QAAMI,GAAG,GAAGF,GAAG,GAAGA,GAAH,GAAS,KAAxB,CAL2B,CAO3B;;AACA,QAAMG,UAAU,GAAG,MAAM;AACvB,WAAOJ,IAAI,CAACK,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC3B,YAAMC,OAAO,GAAGF,IAAI,CAACL,GAAL,GAAWK,IAAI,CAACL,GAAhB,GAAsB,KAAtC;AACA,0BACE,QAAC,QAAD;AAAA,mBACGK,IAAI,CAACG,KAAL,gBACC,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAEH,IAAI,CAACI,SAArC;AAAgD,UAAA,MAAM,EAAEJ,IAAI,CAACG,KAAL,CAAWE,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAAxD;AAAA,oBACGN,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,gBADD,GAIG,IALN,EAMG,CAACH,IAAI,CAACO,IAAN,gBACC,QAAC,MAAD;AACE,UAAA,GAAG,EAAEL,OADP;AAEE,UAAA,SAAS,EAAEb,UAAU,CAAC,SAAD,EAAY;AAC/B,aAACW,IAAI,CAACJ,SAAN,GAAkBI,IAAI,CAACJ;AADQ,WAAZ,CAFvB;AAAA,cAKOI,IAAI,CAACG,KAAL,GAAa;AAAEK,YAAAA,EAAE,EAAER,IAAI,CAACG,KAAL,CAAWE,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B;AAAN,WAAb,GAAuD,EAL9D;AAAA,aAMMN,IANN;AAOE,UAAA,KAAK,EAAES,SAPT;AAQE,UAAA,IAAI,EAAEA;AARR;AAAA;AAAA;AAAA;AAAA,gBADD,GAWG,IAjBN,EAkBGT,IAAI,CAACO,IAAL,gBAAY,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,gCAAnB;AAAA,oBAAqDP,IAAI,CAACO;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAAZ,GAAwF,IAlB3F;AAAA,SAAeN,CAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD,KAxBM,CAAP;AAyBD,GA1BD;;AA4BA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAEZ,UAAU,CAAC,cAAD,EAAiB;AACpC,OAACO,SAAD,GAAaA;AADuB,KAAjB,CADvB;AAAA,cAKGE,UAAU;AALb;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7CD;;KAAMN,W;AA+CN,eAAeA,WAAf,C,CAEA;;AACAA,WAAW,CAACkB,SAAZ,GAAwB;AACtBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,KAAV,CAAgBC,UADA;AAEtBjB,EAAAA,GAAG,EAAEP,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,IAAX,EAAiB1B,SAAS,CAAC2B,MAA3B,CAApB;AAFiB,CAAxB","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarGroup = props => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : 'div'\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      const ItemTag = item.tag ? item.tag : 'div'\r\n      return (\r\n        <Fragment key={i}>\r\n          {item.title ? (\r\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null}\r\n          {!item.meta ? (\r\n            <Avatar\r\n              tag={ItemTag}\r\n              className={classnames('pull-up', {\r\n                [item.className]: item.className\r\n              })}\r\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\r\n              {...item}\r\n              title={undefined}\r\n              meta={undefined}\r\n            />\r\n          ) : null}\r\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar-group', {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}